#!/bin/bash
# include related libraries
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
source $DIR/../lib/gentoo

# process command line arguments first to set environment variables from
# valid command line arguments
export ARGPARSERS="common gentoo"

# assigning creation only variables here.
# TODO figure out how to best potentially override them?
source $DIR/../share/config/vboxtools/gentoo-base

argparse "$@"
if [ $? -ne 0 ]; then
    exit 1
fi

locate_gentoo_archives

create_vm gentoo || \
    die "failed to create vm ${VBOX_NAME} for gentoo build"

checkenvfile GENTOO_STAGE3 GENTOO_PORTAGE || exit 1

VBoxManage startvm "${VBOX_NAME}"

prepare_gentoo_boot_iso_environment

scp -oStrictHostKeyChecking=no -oBatchMode=Yes -i "${VBOX_PRIVKEY}" \
    "${GENTOO_STAGE3}" root@$VBOX_IP:stage3-amd64.tar

scp -oStrictHostKeyChecking=no -oBatchMode=Yes -i "${VBOX_PRIVKEY}" \
    "${GENTOO_PORTAGE}" root@$VBOX_IP:portage.tar

rsync -re \
    "ssh -oStrictHostKeyChecking=no -oBatchMode=Yes -i \"${VBOX_PRIVKEY}\"" \
    "${GENTOO_FILES}/" root@$VBOX_IP:gentoo_files

ssh -oStrictHostKeyChecking=no -oBatchMode=Yes -i "${VBOX_PRIVKEY}" \
    root@$VBOX_IP ./gentoo_files/init.sh

if [ $? -ne 0 ]; then
    warn "error with installation"
    forcepoweroff_vm "${VBOX_NAME}" 15
    exit 1
fi

wait_vm_shutdown "${VBOX_NAME}" 15 || \
    die "'${VBOX_NAME}' did not shutdown; cannot continue with verification"

# timeout to wait for the VirtualBox registry to fully sync up
sleep 1

# remove the boot iso for proper bootup.
VBoxManage storageattach "${VBOX_NAME}" --storagectl IDE --port 0 --device 0 \
    --medium emptydrive

VBoxManage startvm "${VBOX_NAME}"
echo "the vm may be accessible after it completes the booting process using:"
echo "ssh -oStrictHostKeyChecking=no -oBatchMode=Yes -i \"${VBOX_PRIVKEY}\" \
    root@$VBOX_IP"
